--- MODS.js	2022-10-18 07:56:24.000000000 +0200
+++ SafetyLit MODS.js	2022-10-21 07:49:36.000000000 +0200
@@ -1,11 +1,11 @@
 {
-	"translatorID": "0e2235e7-babf-413c-9acf-f27cce5f059c",
-	"label": "MODS",
-	"creator": "Simon Kornblith, Richard Karnesky, and Abe Jellinek",
+	"translatorID": "011e23fd-91bd-4c3e-b1ae-edf22889d944",
+	"label": "SafetyLit MODS",
+	"creator": "Simon Kornblith, Richard Karnesky, Abe Jellinek and Emiliano Heyns",
 	"target": "xml",
 	"minVersion": "2.1.9",
 	"maxVersion": "",
-	"priority": 50,
+	"priority": 60,
 	"configOptions": {
 		"dataMode": "xml/dom"
 	},
@@ -13,8 +13,8 @@
 		"exportNotes": true
 	},
 	"inRepository": true,
-	"translatorType": 3,
-	"lastUpdated": "2021-07-14 23:47:43"
+	"translatorType": 2,
+	"lastUpdated": "2022-10-21 07:49:36"
 }
 
 /*
@@ -370,6 +370,18 @@
 	var item;
 	let titleInfo;
 	while (item = Zotero.nextItem()) { // eslint-disable-line no-cond-assign
+		// Emiliano Heyns: SafetyLit cleanup
+		for (const page of ['pages', 'codePages', 'firstPage']) {
+			if (`${item[page]}`.match(/^\d+$/)) item[page] = `e${item[page]}`
+		}
+		for (const number of ['volume', 'issue', 'section']) {
+			for (const volume of ['volume', 'codeVolume', 'reporterVolume']) {
+				if (!item[number] && !item[number] && !item.issue) item[number] = item[volume] = item.issue = 'ePub'
+			}
+		}
+		delete item.journalAbbreviation
+		// Emiliano Heyns: end of SafetyLit cleanup
+
 		// Don't export notes or standalone attachments
 		if (item.itemType === "note" || item.itemType === "attachment") continue;
 		
